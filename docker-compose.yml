
services:
  fastapi:
    build:
      context: .  # ✅ Ensure it builds from the current directory
      dockerfile: Dockerfile  # ✅ Explicitly specify the Dockerfile
    image: fastapi-server  # ✅ Name the image
    container_name: fastapi-container  # ✅ Give the container a clear name
    restart: always  # ✅ Restart the container automatically if it crashes
    environment:
      - DATABASE_URL=postgresql://postgres:postgrespassword@postgres/tasksdb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy  # ✅ Wait for PostgreSQL to be healthy
    ports:
      - "8000:8000"
    volumes:
      - ./cc_compose:/app/cc_compose:Z
      - ./static:/app/static:Z
    stdin_open: true
    tty: true

  postgres:
    image: postgres:15
    container_name: postgres-db  # ✅ Give the container a clear name
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: tasksdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy  # ✅ Give the container a clear name
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      fastapi:
        condition: service_healthy  # ✅ Wait for FastAPI to be healthy

volumes:
  pgdata:
